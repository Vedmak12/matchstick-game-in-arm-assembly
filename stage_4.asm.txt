gamestart:
      MOV R12, #msg1    ;; MOVES INPUT MSG IN R0
      STR R12, .WriteString ;; WRITES MSG 
      MOV R11, #inputname ;; MOVE ARRAY 
      STR R11, .ReadString ;; MOVE INPUT INTO ARRAY
arrayloop:
      LDRB R10, [R11+R9]
      STRB R10, [R11+R9]
      ADD R9, R9, #1
      CMP R10, #0
      BNE arrayloop
numinput:
      MOV R12, #msg2
      STR R12, .WriteString
      LDR R8, .InputNum ;; User matchsticks input
      MOV R9, #0        ;; INITIALISE INDEX
      CMP R8, #10       ;; Compares input with 10
      BLT numinput
      CMP R8, #100      ;; Compares input with 100
      BGT numinput
main:
      MOV R2, R8
      MOV R1, R11
      BL print
      BL startdraw
game_loop:
      BL msremoved
      PUSH {R8-R12}
      BL startdraw
      POP {R8-R12}
      BL computer_turn
      PUSH {R8-R12}
      BL startdraw
      POP {R8-R12}
      B game_loop
msg1: .ASCIZ "Please enter your name\n"
inputname: .BLOCK 256
msg2: .ASCIZ "How many matchsticks (10-100)?\n"
msg3: .ASCIZ "Player 1 is "
msg4: .ASCIZ "\nMatchsticks: "
msg5: .ASCIZ "\nPlayer "
msg6: .ASCIZ ", there are "
msg7: .ASCIZ "matchsticks remaining\n"
msg8: .ASCIZ "how many do you want to remove(1-7)?\n"
msg9: .ASCIZ "\nGame Over"
msg10: .ASCIZ "\nComputer Playerâ€™s turn\n "
msg11: .ASCIZ " ,YOU WIN!!!"
msg12: .ASCIZ "\n IT'S A DRAW"
msg13: .ASCIZ ", YOU LOSE!"
msg14: .ASCIZ "Computer"
msg15: .ASCIZ "\nPlay again (y/n) ?\n"
halt1:
      HALT
inputBuffer: .BLOCK 256 ;; Allocate 256 bytes for the input buffer
msremoved:              ;; Matchsticks removed 
      MOV R0, #msg8     ;; Prints the "how many do you want to remove" msg
      STR R0, .WriteString
      LDR R1, .InputNum ;; Takes the input
;; Comparison for the 1-7 limit
      CMP R1, #1 
      BLT msremoved
      CMP R1, #7
      BGT msremoved
      CMP R1, R2
      BGT msremoved
      SUB R2, R2, R1    ;; Subtracts the input from the total number of matchsticks
      MOV R3, R2
      STR R3, .WriteSignedNum
      MOV R0, #msg7
      STR R0, .WriteString
      CMP R3, #1
      BEQ playerWins 
      CMP R3,#0
      BEQ drawCondition
      RET
computer_turn:
      MOV R0, #msg10
      STR R0, .WriteString
      LDR R1, .Random
      AND R1, R1, #7
      CMP R1, #1
      BLT computer_turn
      CMP R1, R2
      BGT computer_turn
      SUB R2, R2, R1    ;; Subtracts the input from the total number of matchsticks
      MOV R3, R2
      STR R3, .WriteSignedNum
      MOV R0, #msg7
      STR R0, .WriteString
      CMP R3, #1
      BEQ computerWins
      CMP R3, #0
      BEQ drawCondition
      RET
playerWins:
      MOV R0, #msg5
      STR R0, .WriteString
      STR R11, .WriteString ;; Prints name input given by user into console
      MOV R0, #msg11
      STR R0, .WriteString
      MOV R0, #msg5
      STR R0, .WriteString
      MOV R0, #msg14
      STR R0, .WriteString
      MOV R0, #msg13
      STR R0, .WriteString
      push {r0-r12}
      BL startdraw
      pop {r0-r12}
      B continueGame
computerWins: 
      MOV R0, #msg5
      STR R0, .WriteString
      MOV R0, #msg14
      STR R0, .WriteString
      MOV R0, #msg11
      STR R0, .WriteString
      MOV R0, #msg5
      STR R0, .WriteString
      STR R11, .WriteString ;; Prints name input given by user into console
      MOV R0, #msg13
      STR R0, .WriteString
      push {r0-r12}
      BL startdraw
      pop {r0-r12}
      B continueGame
drawCondition:
      STR R0, .ClearScreen
      MOV R0, #msg12
      STR R0, .WriteString
      B continueGame
print:
      MOV R0, #msg3
      STR R0, .WriteString ;; Prints msg into console
      STR R1, .WriteString ;; Prints name input given by user into console
      MOV R0, #msg4
      STR R0, .WriteString
      STR R2, .WriteSignedNum ;; Prints number input given into console
      MOV R0, #msg5
      STR R0, .WriteString
      STR R1, .WriteString ;; Prints name input given by user into console
      MOV R0, #msg6
      STR R0, .WriteString
      STR R2, .WriteSignedNum
      MOV R0, #msg7
      STR R0, .WriteString
      STR R2, .WriteSignedNum ;; Prints number input given into console
      MOV R0, #msg7
      STR R0, .WriteString
      RET
continueGame:
      MOV R0, #msg15
      STR R0, .WriteString ;; Write the message asking for input
      MOV R1, #inputBuffer ;; Point R0 to the input buffer
      STR R1, .ReadString ;; Read the input string into the buffer
      LDRB R5, [R1]     ;; Load the first character of the input into R9
      CMP R5, #121      ;; Compare with ASCII 'y' (121)
      BEQ main
      CMP R5, #110      ;; Compare with ASCII 'n' (110)
      BEQ halt1
      B continueGame    ;; If not 'y' or 'n', prompt again
      HALT
startdraw:
      PUSH {LR}
      STR R0, .ClearScreen
      MOV R1 , #.PixelScreen
      MOV R8, #.black
      MOV R3, #768
      MOV R4, R3
      MOV R6,#1
      MOV R7, R2
      MOV R8, #0
loop2:
      MOV R5, #0        ;matchstick counter
loop1:
      CMP R7,#0
      BEQ drawCondition
      STR R2, [R1+R3]   ;starts the animation by printing it at 768
      ADD R4,R4, #256   ;location of the next bit
      STR R2,[R1+R4]    ;prints at 1023 completes the 1 matchstick
      BL adddraw
      ADD R5, R5 , #1
      ADD R8, R8, #1
      CMP R8, R7
      BEQ ret1
      CMP R5, #20
      BNE loop1
      ADD R6, R6, #1
      CMP R6,#2
      BEQ line2
      CMP R6, #3
      BEQ line3
      CMP R6, #4
      BEQ line4
      CMP R6, #5
      BEQ line5
      halt
line2:
      MOV R3, #1536
      MOV R4, R3
      B loop2
      HALT
line3:
      MOV R3, #2304
      MOV R4, R3
      B loop2
      HALT
line4:
      MOV R3, #3072
      MOV R4, R3
      B loop2
      HALT
line5:
      MOV R3, #3840
      MOV R4, R3
      B loop2
      HALT
adddraw:
      ADD R3, R3, #8
      MOV R4, R3
      RET               ; return from the subroutine
ret1:
      POP {LR}
      RET
      HALT
